#!/usr/bin/env ruby
#
# Copyright (C) 2014 Droonga Project
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

require "ostruct"
require "optparse"
require "open3"

require "droonga/engine/version"
require "droonga/catalog_generator"
require "droonga/serf"

options = OpenStruct.new
options.port    = Droonga::CatalogGenerator::DEFAULT_PORT
options.tag     = Droonga::CatalogGenerator::DEFAULT_TAG
options.dataset = Droonga::CatalogGenerator::DEFAULT_DATASET
parser = OptionParser.new
parser.version = Droonga::Engine::VERSION

parser.separator("")
parser.separator("Connection:")
parser.on("--source-host=HOST",
          "Host name of the source cluster to be connected.") do |host|
  options.source_host = host
end
parser.on("--destination-host=HOST",
          "Host name of this cluster to be connected.") do |host|
  options.destination_host = host
end
parser.on("--port=PORT", Integer,
          "Port number of the source cluster to be connected.",
          "(#{options.port})") do |port|
  options.port = port
end

parser.separator("")
parser.separator("Data:")
parser.on("--tag=TAG",
          "Tag name to be used to communicate with Droonga system.",
          "(#{options.tag})") do |tag|
  options.tag = tag
end
parser.on("--dataset=DATASET",
          "Dataset to be absorbed.",
          "(#{options.dataset})") do |dataset|
  options.dataset = dataset
end

parser.parse!(ARGV)

unless options.source_host
  raise "You must specify the source host via --source-host option."
end
unless options.destination_host
  raise "You must specify the destination host via --destination-host option."
end

destination_node = "#{options.destination_host}:#{options.port}/#{options.tag}"

puts "Absorbing data..."
result = Droonga::Serf.send_query(destination_node, "absorb_data",
                                  "node"    => destination_node,
                                  "source"  => options.source_host,
                                  "port"    => options.port,
                                  "tag"     => options.tag,
                                  "dataset" => options.dataset)
puts result[:output]
puts result[:error] unless result[:error].empty?
puts "Done."

exit(true)
