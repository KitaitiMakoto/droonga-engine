#!/usr/bin/env ruby
#
# Copyright (C) 2014 Droonga Project
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

require "ostruct"
require "optparse"
require "open3"

require "droonga/engine/version"
require "droonga/data_absorber"

options = {
  :drndump => "drndump",
  :client  => "droonga-request",
}
parser = OptionParser.new
parser.version = Droonga::Engine::VERSION

parser.separator("")
parser.separator("Source:")
parser.on("--source-host=HOST",
          "Host name of the source cluster to be connected.") do |host|
  options[:source_host] = host
end
parser.on("--source-port=PORT", Integer,
          "Port number of the source cluster to be connected.") do |port|
  options[:port] = port
end

parser.separator("")
parser.separator("Destination:")
parser.on("--destination-host=HOST",
          "Host name of this cluster to be connected.") do |host|
  options[:destination_host] = host
end
parser.on("--destination-port=PORT", Integer,
          "Port number of this cluster to be connected.") do |port|
  options[:port] = port
end

parser.separator("")
parser.separator("Data:")
parser.on("--tag=TAG",
          "Tag name to be used to communicate with Droonga system.") do |tag|
  options[:tag] = tag
end
parser.on("--dataset=DATASET",
          "Dataset to be absorbed.") do |dataset|
  options[:dataset] = dataset
end

parser.separator("")
parser.separator("Droonga protocol:")
parser.on("--receiver-host=HOST",
          "Host name of this node to be received a response from clusters.") do |host|
  options[:destination_host] = host
end
parser.on("--receiver-port=PORT", Integer,
          "Port number of this node to be received a response from clusters.") do |port|
  options[:receiver_port] = port
end

parser.separator("")
parser.separator("Commands:")
parser.on("--drndump=PATH",
          "Path to the drndump command.",
          "(#{options[:client]})") do |path|
  options[:drndump] = path
end
parser.on("--droonga-request=PATH",
          "Path to the droonga-request command.",
          "(#{options[:client]})") do |path|
  options[:client] = path
end

parser.parse!(ARGV)

Droonga::DataAbsorber.absorb(options) do |dump|
  puts dump
end

exit 0
