#!/usr/bin/env ruby
#
# Copyright (C) 2014 Droonga Project
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

require "ostruct"
require "optparse"
require "open3"

require "droonga/engine/version"

options = OpenStruct.new
parser = OptionParser.new
parser.version = Droonga::Engine::VERSION

options.drndump = "drndump"
drndump_options = []

options.droonga_request = "droonga-request"
droonga_request_options = []

parser.separator("")
parser.separator("Source:")
parser.on("--host=HOST",
          "Host name of the soruce cluster to be connected.") do |host|
  drndump_options += ["--host", host]
end
parser.on("--port=PORT", Integer,
          "Port number of the soruce cluster to be connected.") do |port|
  drndump_options += ["--port", port.to_s]
end
parser.on("--tag=TAG",
          "Tag name to be used to communicate with Droonga system.") do |tag|
  drndump_options += ["--tag", tag]
  droonga_request_options += ["--tag", tag]
end

parser.separator("")
parser.separator("Destination:")
parser.on("--destination-host=HOST",
          "Host name of this cluster to be connected.") do |host|
  options.destination_host = host
end
parser.on("--destination-port=PORT", Integer,
          "Port number of this cluster to be connected.") do |port|
  droonga_request_options += ["--port", port.to_s]
end

parser.separator("")
parser.separator("Data:")
parser.on("--dataset=DATASET",
          "Dataset to be absorbed.") do |dataset|
  drndump_options += ["--dataset", dataset]
end

parser.separator("")
parser.separator("Droonga protocol:")
parser.on("--receiver-host=HOST",
          "Host name of this node to be received a response from clusters.") do |host|
  options.destination_host = host
end
parser.on("--receiver-port=PORT", Integer,
          "Port number of this node to be received a response from clusters.") do |port|
  drndump_options += ["--receiver-port", port.to_s]
  droonga_request_options += ["--receiver-port", port.to_s]
end

parser.separator("")
parser.separator("Commands:")
parser.on("--drndump=PATH",
          "Path to the drndump command.") do |path|
  options.drndump = path
end
parser.on("--droonga-client=PATH",
          "Path to the droonga-client command.") do |path|
  options.droonga_client = path
end

parser.parse!(ARGV)

drndump_options += ["--receiver-host", options.destination_host]
droonga_request_options += ["--host", options.destination_host]
droonga_request_options += ["--receiver-host", options.destination_host]

drndump_command_line = [options.drndump] + drndump_options
droonga_request_command_line = [options.droonga_request] + droonga_request_options

drndump_stdin, drndump_stdout, drndump_stderr = *Open3.popen3(*drndump_command_line)
droonga_request_stdin, droonga_request_stdout, droonga_request_stderr = *Open3.popen3(*droonga_request_command_line)

drndump_stdout.each do |dump|
  droonga_request_stdin.puts(dump)
end

droonga_request_stdout.each do |result|
  puts result
end

exit 0
