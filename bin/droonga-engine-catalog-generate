#!/usr/bin/env ruby
#
# Copyright (C) 2014 Droonga Project
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

require "ostruct"
require "optparse"
require "json"
require "tempfile"
require "pathname"

require "droonga/engine/version"
require "droonga/catalog_generator"

generator = Droonga::CatalogGenerator.new
current_dataset = {}
datasets = {
  Droonga::CatalogGenerator::DEFAULT_DATASET => current_dataset
}

options = OpenStruct.new
options.output_path = "-"
parser = OptionParser.new
parser.version = Droonga::Engine::VERSION
parser.on("--output=PATH",
          "Output catalog.json to PATH.",
          "\"-\" means the standard output.",
          "(#{options.output_path})") do |path|
  options.output_path = path
end
parser.on("--dataset=NAME",
          "Add a dataset its name is NAME.",
          "And set the NAME to the current dataset.") do |name|
  current_dataset = datasets[name] = {}
end
parser.on("--n-workers=N", Integer,
          "Use N workers for the current dataset.") do |n|
  current_dataset[:n_workers] = n
end
parser.on("--hosts=NAME1,NAME2,...", Array,
          "Use given hosts for replicas of the current dataset.") do |hosts|
  current_dataset[:hosts] = hosts
end
parser.on("--port=PORT", Integer,
          "Use the PORT as the port for the current dataset.") do |port|
  current_dataset[:port] = port
end
parser.on("--tag=TAG",
          "Use the TAG as the tag for the current dataset.") do |tag|
  current_dataset[:tag] = tag
end
parser.on("--n-slices=N", Integer,
          "Use N slices for each replica.") do |n|
  current_dataset[:n_slices] = n
end
parser.on("--plugins=PLUGIN1,PLUGIN2,...", Array,
          "Use PLUGINS for the current dataset.") do |plugins|
  current_dataset[:plugins] = plugins
end
parser.on("--schema=PATH",
          "Use schema in JSON at PATH for the current dataset.") do |path|
  File.open(path) do |input|
    current_dataset[:schema] = JSON.parse(input.read)
  end
end
parser.on("--fact=TABLE",
          "Use TABLE as the fact table for the current dataset.") do |table|
  current_dataset[:fact] = table
end
parser.on("--replicas=PATH",
          "Use replicas in JSON at PATH for the current dataset.") do |path|
  File.open(path) do |input|
    current_dataset[:replicas] = JSON.parse(input.read)
  end
end
parser.parse!(ARGV)

if datasets[Droonga::CatalogGenerator::DEFAULT_DATASET].empty?
  datasets.delete(Droonga::CatalogGenerator::DEFAULT_DATASET)
end

datasets.each do |name, options|
  generator.add_dataset(name, options)
end

def open_output(path)
  if path == "-"
    yield($stdout)
  else
    # Don't output the file directly to prevent loading of incomplete file!
    path = Pathname(path).expand_path
    FileUtils.mkdir_p(path.dirname.to_s)
    Tempfile.open(path.basename.to_s, path.dirname.to_s, "w") do |output|
      yield(output)
      output.flush
      File.rename(output.path, path.to_s)
    end
  end
end

catalog = generator.generate
open_output(options.output_path) do |output|
  output.puts(JSON.pretty_generate(catalog))
end
